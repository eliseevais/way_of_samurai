{"version":3,"file":"static/js/944.5ba64b78.chunk.js","mappings":"yLACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yB,mBCkBjN,EAfmB,SAACA,GAElB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,gBAAKC,UAAWC,EAAW,IAAMA,EAAS,UACxC,UAAC,KAAO,CAACC,GAAIJ,EAAK,WAChB,gBAAKK,IAAI,+DACRN,EAAMO,SAIf,ECPA,EANgB,SAACP,GACf,OACE,gBAAKG,UAAWC,EAAU,SAAEJ,EAAMQ,SAEtC,E,iDCFMC,GAAaC,EAAAA,EAAAA,GAAiB,IAkBpC,GAAeC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAjC,EAhBuB,SAACZ,GACtB,OACE,kBAAMa,SAAUb,EAAMc,aAAa,WACjC,0BACE,SAACC,EAAA,EAAK,CAACC,UAAWC,EAAAA,GAChBC,SAAU,CAACC,EAAAA,EAAUV,GACrBF,KAAK,iBACLa,YAAY,0BAEhB,0BACE,4BAAQ,aAIhB,ICaA,EA3BgB,SAACpB,GAEf,IAAIqB,EAAQrB,EAAMsB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAU,CAAYnB,KAAMmB,EAAEnB,KAAML,GAAIwB,EAAExB,IAA1BwB,EAAExB,GAA8B,IAC1FyB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAO,CAAYrB,QAASqB,EAAErB,SAAjBqB,EAAE3B,GAA0B,IACpEmB,EAAMS,eAM3B,OAAK9B,EAAM+B,QAGT,iBAAK5B,UAAWC,EAAU,WACxB,gBAAKD,UAAWC,EAAe,SAC5BmB,KAEH,gBAAKpB,UAAWC,EAAW,UACzB,yBAAMuB,OAER,SAAC,EAAc,CAACd,SAdA,SAACmB,GACnBhC,EAAMiC,YAAYD,EAAOF,eAC3B,QAE0B,SAAC,KAAQ,CAACzB,GAAG,UAazC,E,0DC1BI6B,EAA6B,SAACb,GAAK,MAAM,CAC3CU,OAAQV,EAAMc,KAAKJ,OACpB,ECaD,GAAeK,E,QAAAA,KACbC,EAAAA,EAAAA,KAfoB,SAAChB,GACrB,MAAO,CACLC,YAAaD,EAAMC,YAEvB,IAEyB,SAACgB,GACxB,MAAO,CACLL,YAAa,SAACH,GACZQ,GAASC,EAAAA,EAAAA,GAAmBT,GAC9B,EAEJ,KDTgC,SAACU,GAAe,IAExCC,EAAiB,qGAKpB,OALoB,8BACrB,WACE,OAAKC,KAAK1C,MAAM+B,QAET,SAACS,GAAS,UAAKE,KAAK1C,SAFI,SAAC,KAAQ,CAACK,GAAG,UAG9C,KAAC,EALoB,CAASsC,EAAAA,WAUhC,OAFqCN,EAAAA,EAAAA,IAAQH,EAARG,CAAoCI,EAG3E,GCFA,CAGEG,E","sources":["webpack://react_kabzda_1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__G3174\",\"dialogsItems\":\"Dialogs_dialogsItems__enIrQ\",\"active\":\"Dialogs_active__tso2l\",\"dialog\":\"Dialogs_dialog__EHeIW\",\"messages\":\"Dialogs_messages__Wl4qQ\",\"message\":\"Dialogs_message__gaQmj\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n  let path = '/dialogs/' + props.id;\r\n\r\n  return (\r\n    <div className={s.dialog + ' ' + s.active}>\r\n      <NavLink to={path}>\r\n        <img src=\"https://photoptichka.ru/wp-content/uploads/2015/09/998.jpg\"></img>\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={s.message}>{props.message}</div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../Common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\n\r\nconst maxLengh50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea}\r\n          validate={[required, maxLengh50]}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter your message\" />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm);\r\n","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id} />);\r\n  let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message} />);\r\n  let newMessageBody = state.newMessageBody;\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  }\r\n\r\n  if (!props.isAuth) return <Navigate to='/login' />;\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n      </div>\r\n      <AddMessageForm onSubmit={addNewMessage} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { Navigate  } from \"react-router-dom\";\r\nimport { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to='/login' />;\r\n\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n  \r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n  \r\n  return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport { sendMessageCreator } from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);"],"names":["props","path","id","className","s","to","src","name","message","maxLengh50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","isAuth","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}